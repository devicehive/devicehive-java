/*
 * Device Hive REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.3.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.devicehive.rest.model;

import com.google.gson.annotations.SerializedName;
import lombok.Data;
import org.joda.time.DateTime;

/**
 * DeviceCommand
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-07-20T15:03:42.016+03:00")
@Data
public class DeviceCommand implements Comparable<DeviceCommand> {
    @SerializedName("id")
    private Long id = null;

    @SerializedName("command")
    private String command = null;

    @SerializedName("timestamp")
    private DateTime timestamp = null;

    @SerializedName("userId")
    private Long userId = null;

    @SerializedName("deviceId")
    private String deviceId = null;

    @SerializedName("parameters")
    private JsonStringWrapper parameters = null;

    @SerializedName("lifetime")
    private Integer lifetime = null;

    @SerializedName("status")
    private String status = null;

    @SerializedName("result")
    private JsonStringWrapper result = null;

    @SerializedName("isUpdated")
    private Boolean isUpdated = false;

    @Override
    public String toString() {
        return "{\n\"DeviceCommand\":{\n"
                + "\"id\":\"" + id + "\""
                + ",\n \"command\":\"" + command + "\""
                + ",\n \"timestamp\":" + timestamp
                + ",\n \"userId\":\"" + userId + "\""
                + ",\n \"deviceId\":\"" + deviceId + "\""
                + ",\n \"parameters\":" + parameters
                + ",\n \"lifetime\":\"" + lifetime + "\""
                + ",\n \"status\":\"" + status + "\""
                + ",\n \"result\":" + result
                + ",\n \"isUpdated\":\"" + isUpdated + "\""
                + "}\n}";
    }

    @Override
    public int compareTo(DeviceCommand deviceCommand) {
        return getTimestamp().compareTo(deviceCommand.getTimestamp());
    }

}

