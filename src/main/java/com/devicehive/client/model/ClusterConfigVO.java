/**
 * Device Hive REST API
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.1.1-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.devicehive.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import java.util.Objects;


/**
 * ClusterConfigVO
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-12-09T14:31:42.381+02:00")
public class ClusterConfigVO   {
  @SerializedName("bootstrapServers")
  private String bootstrapServers = null;

  @SerializedName("zookeeperConnect")
  private String zookeeperConnect = null;

  @SerializedName("threadsCount")
  private Integer threadsCount = null;

  public ClusterConfigVO bootstrapServers(String bootstrapServers) {
    this.bootstrapServers = bootstrapServers;
    return this;
  }

   /**
   * Get bootstrapServers
   * @return bootstrapServers
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getBootstrapServers() {
    return bootstrapServers;
  }

  public void setBootstrapServers(String bootstrapServers) {
    this.bootstrapServers = bootstrapServers;
  }

  public ClusterConfigVO zookeeperConnect(String zookeeperConnect) {
    this.zookeeperConnect = zookeeperConnect;
    return this;
  }

   /**
   * Get zookeeperConnect
   * @return zookeeperConnect
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getZookeeperConnect() {
    return zookeeperConnect;
  }

  public void setZookeeperConnect(String zookeeperConnect) {
    this.zookeeperConnect = zookeeperConnect;
  }

  public ClusterConfigVO threadsCount(Integer threadsCount) {
    this.threadsCount = threadsCount;
    return this;
  }

   /**
   * Get threadsCount
   * @return threadsCount
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getThreadsCount() {
    return threadsCount;
  }

  public void setThreadsCount(Integer threadsCount) {
    this.threadsCount = threadsCount;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClusterConfigVO clusterConfigVO = (ClusterConfigVO) o;
    return Objects.equals(this.bootstrapServers, clusterConfigVO.bootstrapServers) &&
        Objects.equals(this.zookeeperConnect, clusterConfigVO.zookeeperConnect) &&
        Objects.equals(this.threadsCount, clusterConfigVO.threadsCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bootstrapServers, zookeeperConnect, threadsCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClusterConfigVO {\n");
    
    sb.append("    bootstrapServers: ").append(toIndentedString(bootstrapServers)).append("\n");
    sb.append("    zookeeperConnect: ").append(toIndentedString(zookeeperConnect)).append("\n");
    sb.append("    threadsCount: ").append(toIndentedString(threadsCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

